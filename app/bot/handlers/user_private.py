from aiogram import F, types, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery

from sqlalchemy.ext.asyncio import AsyncSession
from database.orm_query import ( 
    orm_add_user,
    orm_get_all_employees,
    orm_get_employee_by_telegram_id,
    orm_link_employee_telegram,
    orm_create_attendance,
    orm_get_attendance_status_today,
    orm_get_today_attendance_status
)

from filters.chat_types import ChatTypeFilter
from kbds.inline import get_employee_selection_keyboard, get_attendance_keyboard, get_location_request_keyboard, get_smart_attendance_keyboard, get_checkout_keyboard, get_smart_attendance_keyboard, get_checkout_keyboard
from app.models.attendance import CheckTypeEnum
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ utils
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
try:
    from utils.location import is_at_office, format_distance, validate_live_location_security, is_location_realistic
    from utils.timezone import format_tashkent_time
except ImportError:
    # –ï—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–≥–ª—É—à–∫—É
    def is_at_office(lat, lon):
        return True, 0
    def format_distance(dist):
        return f"{dist:.0f} –º"
    def validate_live_location_security(location):
        return True, "OK"
    def is_location_realistic(lat, lon):
        return True
    def format_tashkent_time(dt, fmt='%H:%M:%S'):
        return dt.strftime(fmt)



user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(["private"]))


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message, session: AsyncSession):
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É User (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
    employee = await orm_get_employee_by_telegram_id(session, message.from_user.id)
    
    if employee:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–º–µ—Ç–æ–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
        already_checked_in, already_checked_out = await orm_get_today_attendance_status(session, employee.id)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        if already_checked_in and already_checked_out:
            status_text = f"–í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã"
            await message.answer(status_text)
        elif already_checked_in and not already_checked_out:
            status_text = f"–í—ã –Ω–∞ —Ä–∞–±–æ—Ç–µ. –ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ —É—Ö–æ–¥–∏—Ç—å, –æ—Ç–º–µ—Ç—å—Ç–µ—Å—å."
            keyboard = get_smart_attendance_keyboard(already_checked_in, already_checked_out)
            await message.answer(status_text, reply_markup=keyboard)
        elif not already_checked_in:
            status_text = f"–û—Ç–º–µ—Ç—å—Ç–µ—Å—å –ø—Ä–∏ –ø—Ä–∏—Ö–æ–¥–µ –Ω–∞ —Ä–∞–±–æ—Ç—É."
            keyboard = get_smart_attendance_keyboard(already_checked_in, already_checked_out)
            await message.answer(status_text, reply_markup=keyboard)
        else:
            status_text = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
            keyboard = get_attendance_keyboard()
            await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {employee.full_name}!\n\n{status_text}",
            reply_markup=keyboard)
    else:
        # –ï—Å–ª–∏ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
        employees = await orm_get_all_employees(session)
        
        if not employees:
            await message.answer(
                "‚ùå –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º—É."
            )
            return

        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏!\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–∑ —Å–ø–∏—Å–∫–∞:",
            reply_markup=get_employee_selection_keyboard(employees)
        )
@user_private_router.callback_query(F.data.startswith("select_employee_"))
async def select_employee_callback(callback: CallbackQuery, session: AsyncSession):
    employee_id = int(callback.data.split("_")[-1])
    telegram_id = callback.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç telegram_id
    existing_employee = await orm_get_employee_by_telegram_id(session, telegram_id)
    if existing_employee:
        await callback.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!", show_alert=True)
        return
    
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º telegram_id –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
    success, message_text = await orm_link_employee_telegram(session, employee_id, telegram_id)
    
    if success:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        employee = await orm_get_employee_by_telegram_id(session, telegram_id)
        
        await callback.message.edit_text(
            f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ {employee.full_name}!\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ—á–∞—Ç—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å:",
            reply_markup=get_attendance_keyboard()
        )
    else:
        await callback.answer(message_text, show_alert=True)


@user_private_router.callback_query(F.data == "not_in_list")
async def not_in_list_callback(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚ùå –ï—Å–ª–∏ –≤–∞—Å –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n\n"
        "üìû –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ HR –æ—Ç–¥–µ–ª—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º—É\n"
        "üíª –ò–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å IT –æ—Ç–¥–µ–ª–æ–º\n\n"
        "–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º—É –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º."
    )


@user_private_router.callback_query(F.data.startswith("attendance_"))
async def attendance_callback(callback: CallbackQuery, session: AsyncSession):
    check_type_str = callback.data.split("_")[-1]  # "in" –∏–ª–∏ "out"
    telegram_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    employee = await orm_get_employee_by_telegram_id(session, telegram_id)
    if not employee:
        await callback.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–º–µ—Ç–æ–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    already_checked_in, already_checked_out = await orm_get_attendance_status_today(session, employee.id)
    
    check_type = CheckTypeEnum.IN if check_type_str == "in" else CheckTypeEnum.OUT
    
    if check_type == CheckTypeEnum.IN:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–º–µ—Ç–∏–ª—Å—è –ª–∏ —É–∂–µ –∫–∞–∫ "–ø—Ä–∏—à–µ–ª"
        if already_checked_in:
            await callback.answer(
                "‚ö†Ô∏è –í—ã —É–∂–µ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å –∫–∞–∫ –ü–†–ò–®–ï–õ —Å–µ–≥–æ–¥–Ω—è!\n"
                f"–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞: {format_tashkent_time(already_checked_in, '%H:%M:%S')}",
                show_alert=True
            )
            return
            
        # –î–ª—è "–ü—Ä–∏—à–µ–ª" –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º live location
        await callback.message.edit_text(
            "üìç –î–ª—è –æ—Ç–º–µ—Ç–∫–∏ –ø—Ä–∏—Ö–æ–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ\n\n"
            "‚ö†Ô∏è –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ LIVE LOCATION!\n\n"
            "üìã –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Live Location:\n"
            "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É üìé (—Å–∫—Ä–µ–ø–∫–∞)\n"
            "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ '–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è'\n"
            "3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è Live Location'\n"
            "4Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è (–º–∏–Ω–∏–º—É–º 15 –º–∏–Ω—É—Ç)\n"
            "5Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ\n\n"
            "‚ùå –û–±—ã—á–Ω–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –ù–ï –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è!",
            reply_markup=get_location_request_keyboard()
        )
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–º–µ—Ç–∏–ª—Å—è –ª–∏ —É–∂–µ –∫–∞–∫ "—É—à–µ–ª"
        if already_checked_out:
            await callback.answer(
                "‚ö†Ô∏è –í—ã —É–∂–µ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å –∫–∞–∫ –£–®–ï–õ —Å–µ–≥–æ–¥–Ω—è!\n"
                f"–í—Ä–µ–º—è —É—Ö–æ–¥–∞: {format_tashkent_time(already_checked_out, '%H:%M:%S')}",
                show_alert=True
            )
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–º–µ—Ç–∏–ª—Å—è –ª–∏ –∫–∞–∫ "–ø—Ä–∏—à–µ–ª" —Å–µ–≥–æ–¥–Ω—è
        if not already_checked_in:
            await callback.answer(
                "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –æ—Ç–º–µ—Ç—å—Ç–µ—Å—å –∫–∞–∫ –ü–†–ò–®–ï–õ!",
                show_alert=True
            )
            return
            
        # –î–ª—è "–£—à–µ–ª" —Å—Ä–∞–∑—É —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
        attendance = await orm_create_attendance(
            session=session,
            employee_id=employee.id,
            check_type=check_type
        )
        
        await callback.message.edit_text(
            f"‚úÖ <b>{employee.full_name}</b>, \n–≤—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å –∫–∞–∫ <b>–£–®–ï–õ</b>\n"
            f"üïê –í—Ä–µ–º—è: <code>{format_tashkent_time(attendance.check_time, '%H:%M:%S')}</code>\n\n"
            "–£–≤–∏–¥–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞! üëã",
            reply_markup=None  # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–º–µ—Ç–∫–∏
        )
    
    # –í–∞–∂–Ω–æ: –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
    await callback.answer()


@user_private_router.callback_query(F.data == "how_to_location")
async def how_to_location_callback(callback: CallbackQuery):
    """–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ Live Location"""
    await callback.message.edit_text(
        "üìç –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø:\n\n"
        "üî¥ –î–ª—è Android:\n"
        "1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç —Å –±–æ—Ç–æ–º\n"
        "2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É üìé (–≤–ª–æ–∂–µ–Ω–∏—è)\n"
        "3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ '–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è'\n"
        "4Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è Live Location'\n"
        "5Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è: 15 –º–∏–Ω—É—Ç –∏–ª–∏ –±–æ–ª—å—à–µ\n"
        "6Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'\n\n"
        "üîµ –î–ª—è iPhone:\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '+' —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞\n"
        "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ '–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è'\n"
        "3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è Live Location'\n"
        "4Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è: 15 –º–∏–Ω—É—Ç –∏–ª–∏ –±–æ–ª—å—à–µ\n"
        "5Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'\n\n"
        "‚ö†Ô∏è –í–ê–ñ–ù–û: \n"
        "‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é'\n"
        "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ 'Live Location'\n\n"
        "üí° Live Location –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
        reply_markup=get_location_request_keyboard()
    )


@user_private_router.callback_query(F.data == "location_sent")
async def location_sent_callback(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á—Ç–æ location –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"""
    await callback.message.edit_text(
        "‚è≥ –û–∂–∏–¥–∞—é –≤–∞—à Live Location...\n\n"
        "–ï—Å–ª–∏ –≤—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ Live Location, –æ–Ω –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —á–∞—Ç–µ.\n\n"
        "‚ùì –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:\n"
        "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–º–µ–Ω–Ω–æ Live Location\n"
        "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–∞–∑—Ä–µ—à–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏\n"
        "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n\n"
        "üìû –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ IT –æ—Ç–¥–µ–ª—É"
    )
    await callback.answer()


@user_private_router.message(F.location)
async def handle_location(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –ø—Ä–∏—Ö–æ–¥–∞"""
    telegram_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ forwarded
    if message.forward_date:
        await message.answer(
            "‚ùå –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å forwarded –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é!\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à Live Location:",
            reply_markup=get_location_request_keyboard()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ live location
    if not message.location.live_period:
        await message.answer(
            "‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Live Location!\n\n"
            "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ–±—ã—á–Ω—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω–æ–π.\n\n"
            "üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Live Location —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:",
            reply_markup=get_location_request_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    employee = await orm_get_employee_by_telegram_id(session, telegram_id)
    if not employee:
        await message.answer(
            "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    latitude = message.location.latitude
    longitude = message.location.longitude
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    if not is_location_realistic(latitude, longitude):
        await message.answer(
            "‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞!\n\n"
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ GPS –≤–∫–ª—é—á–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.",
            reply_markup=get_location_request_keyboard()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    is_secure, security_msg = validate_live_location_security(message.location)
    if not is_secure:
        await message.answer(
            f"‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–¥–¥–µ–ª—å–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏!\n\n"
            f"–ü—Ä–∏—á–∏–Ω–∞: {security_msg}\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π Live Location —Å –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.",
            reply_markup=get_location_request_keyboard()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ—Ñ–∏—Å–∞
    is_in_office, distance = is_at_office(latitude, longitude)
    
    if not is_in_office:
        await message.answer(
            f"‚ùå –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ –æ—Ç –æ—Ñ–∏—Å–∞!\n\n"
            f"üìç –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ—Ñ–∏—Å–∞: {format_distance(distance)}\n"
            f"üè¢ –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–æ–π—Ç–∏ –±–ª–∏–∂–µ –∫ –æ—Ñ–∏—Å—É –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –±–ª–∏–∂–µ –∫ –æ—Ñ–∏—Å—É.",
            reply_markup=get_attendance_keyboard()
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
    attendance = await orm_create_attendance(
        session=session,
        employee_id=employee.id,
        check_type=CheckTypeEnum.IN,
        location_lat=str(latitude),
        location_lon=str(longitude)
    )
    
    await message.answer(
        f"‚úÖ <b>{employee.full_name}</b>, \n–≤—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å –∫–∞–∫ <b>–ü–†–ò–®–ï–õ</b>\n"
        f"üïê –í—Ä–µ–º—è: <code>{format_tashkent_time(attendance.check_time, '%H:%M:%S')}</code>\n"
        f"üìç –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ—Ñ–∏—Å–∞: <code>{format_distance(distance)}</code>\n"
        f"üéØ Live Location –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω\n\n"
        "–•–æ—Ä–æ—à–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è! üòä\n\n"
        "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ —É—Ö–æ–¥–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=get_checkout_keyboard()
    )
    

@user_private_router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def cancel_location(message: Message, session: AsyncSession):
    """–û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏"""
    telegram_id = message.from_user.id
    employee = await orm_get_employee_by_telegram_id(session, telegram_id)
    
    if employee:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–º–µ—Ç–æ–∫
        already_checked_in, already_checked_out = await orm_get_today_attendance_status(session, employee.id)
        
        await message.answer(
            f"‚ùå –û—Ç–º–µ—Ç–∫–∞ –ø—Ä–∏—Ö–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\n"
            f"{employee.full_name}, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_smart_attendance_keyboard(already_checked_in, already_checked_out)
        )
    else:
        await message.answer(
            "–û—Ç–º–µ–Ω–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )





@user_private_router.message(Command("help"))
async def help_command_slash(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await message.answer(
        "‚ÑπÔ∏è <b>–°–ü–†–ê–í–ö–ê –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ –ë–û–¢–ê</b>\n\n"
        "üéØ <b>–û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò:</b>\n"
        "‚Ä¢ ‚úÖ –û—Ç–º–µ—Ç–∫–∞ –ø—Ä–∏—Ö–æ–¥–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É (—Å Live Location)\n"
        "‚Ä¢ ‚ùå –û—Ç–º–µ—Ç–∫–∞ —É—Ö–æ–¥–∞ —Å —Ä–∞–±–æ—Ç—ã (–±–µ–∑ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏)\n\n"
        "üìç <b>–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ì–ï–û–õ–û–ö–ê–¶–ò–ò:</b>\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ <b>Live Location</b> (–ù–ï –æ–±—ã—á–Ω—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é)\n"
        "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–¥–∏—É—Å–µ –æ—Ñ–∏—Å–∞\n"
        "‚Ä¢ –ù–µ –ø–µ—Ä–µ—Å—ã–ª–∞–π—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –æ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ GPS –Ω–∞ —Å–≤–æ–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ\n\n"
        "üîß <b>–î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:</b>\n"
        "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "‚ö° <b>–ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø:</b>\n"
        "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–∏—Ö–æ–¥' ‚Üí –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Live Location\n"
        "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ—Ç–∏—Ç—å —É—Ö–æ–¥' ‚Üí –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ\n\n"
        "üÜò <b>–ü–û–î–î–ï–†–ñ–ö–ê:</b>\n"
        "–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ IT –æ—Ç–¥–µ–ª—É\n"
        "–∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏.",
        parse_mode="HTML"
    )
    