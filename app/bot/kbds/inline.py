from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
import calendar


def get_employee_selection_keyboard(employees):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
    builder = InlineKeyboardBuilder()
    
    for employee in employees:
        builder.add(InlineKeyboardButton(
            text=employee.full_name,
            callback_data=f"select_employee_{employee.id}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ú–µ–Ω—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ"
    builder.add(InlineKeyboardButton(
        text="üë§ –ú–µ–Ω—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ",
        callback_data="not_in_list"
    ))
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup()


def get_attendance_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="‚úÖ –ü—Ä–∏—à–µ–ª",
        callback_data="attendance_in"
    ))
    
    builder.add(InlineKeyboardButton(
        text="‚ùå –£—à–µ–ª", 
        callback_data="attendance_out"
    ))
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–∏–¥–∞
    return builder.as_markup()


def get_checkout_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π —É—Ö–æ–¥–∞ (–ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —É–∂–µ –ø—Ä–∏—à–µ–ª)"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="‚ùå –£—à–µ–ª", 
        callback_data="attendance_out"
    ))
    
    builder.adjust(1)
    return builder.as_markup()


def get_smart_attendance_keyboard(already_checked_in_today: bool = False, already_checked_out_today: bool = False):
    """–£–º–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞"""
    builder = InlineKeyboardBuilder()
    
    # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –µ—â–µ –Ω–µ –æ—Ç–º–µ—Ç–∏–ª—Å—è –∫–∞–∫ "–ø—Ä–∏—à–µ–ª"
    if not already_checked_in_today:
        builder.add(InlineKeyboardButton(
            text="‚úÖ –ü—Ä–∏—à–µ–ª",
            callback_data="attendance_in"
        ))
    
    # –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª, –Ω–æ –µ—â–µ –Ω–µ —É—à–µ–ª
    if already_checked_in_today and not already_checked_out_today:
        builder.add(InlineKeyboardButton(
            text="‚ùå –£—à–µ–ª", 
            callback_data="attendance_out"
        ))
    
    # –ï—Å–ª–∏ –æ–±–µ –æ—Ç–º–µ—Ç–∫–∏ —É–∂–µ –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é
    if already_checked_in_today and already_checked_out_today:
        builder.add(InlineKeyboardButton(
            text="‚úÖ –ü—Ä–∏—à–µ–ª",
            callback_data="attendance_in"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –£—à–µ–ª", 
            callback_data="attendance_out"
        ))
    
    builder.adjust(1)
    return builder.as_markup()


def get_location_request_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ –æ Live Location"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üìç –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Live Location?",
        callback_data="how_to_location"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üîÑ –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª location",
        callback_data="location_sent"
    ))
    
    builder.adjust(1)
    return builder.as_markup()


def get_callback_btns(*, btns: dict[str, str], sizes: tuple[int] = (2,)):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    keyboard = InlineKeyboardBuilder()

    for text, data in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=data))

    return keyboard.adjust(*sizes).as_markup()


def get_admin_reports_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üìä –û—Ç—á–µ—Ç—ã –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏",
        callback_data="admin_reports"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        callback_data="admin_stats"
    ))
    
    builder.adjust(1)
    return builder.as_markup()


def get_month_selection_keyboard(year: int, month: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–∞ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤"""
    
    builder = InlineKeyboardBuilder()
    
    month_name = calendar.month_name[month]
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ—Å—è—Ü–∞–º
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è",
        callback_data=f"change_period_{year}_{month}_prev"
    ))
    
    builder.add(InlineKeyboardButton(
        text=f"{month_name} {year}",
        callback_data="current_period"
    ))
    
    builder.add(InlineKeyboardButton(
        text="‚û°Ô∏è",
        callback_data=f"change_period_{year}_{month}_next"
    ))
    
    # –¢–∏–ø—ã –æ—Ç—á–µ—Ç–æ–≤
    builder.add(InlineKeyboardButton(
        text="üìã –ü—Ä–æ—Å—Ç–æ–π –æ—Ç—á–µ—Ç",
        callback_data=f"report_simple_{year}_{month}"
    ))
    
    builder.add(InlineKeyboardButton(
        text="üìä –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç (—Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π)",
        callback_data=f"report_detailed_{year}_{month}"
    ))
    
    builder.adjust(3, 2)
    return builder.as_markup()

